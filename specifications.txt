#####
#
#   This is an example NUMTdumper specifications file.
#   Use this file to detail how per-ASV read frequencies should be assessed.
#
#   Note that any lines starting with # or that are completely blank are ignored
#   Any spaces or newlines in other lines are ignored
#
#####
#
# 1. Categories
#   Read frequencies can be binned according to four categories or combinations of these categories
#   The four available categories are:
#        "total" = the total number of reads for a haplotype across the entire dataset
#        "library" = the number of reads of a haplotype per library
#        "clade" = the clade assignment of a haplotype
#        "taxon" = the taxon assignment of a haplotype
#
#   Binning specification must start with either "total" or "library".
#   Counts will be further subdivided by any assignment term(s).
#   For example: "total|clade" will bin reads by clade over the dataset
#                "library" will use the per-library haplotype reads
#                "library|taxon+clade" will bin reads by unique clade and taxon within each library
#
######
#
# 2. Metrics
#   Frequency can be assessed as one of two metrics, specified as follows:
#       "n" = the absolute total of reads per haplotype within a category or combination of categories
#       "p" = the proportion of reads per haplotype relative to the total number of reads of all
#             haplotypes within a category or combination of categories
#
#####
#
# 3. Thresholds
#   Thresholds for designating NUMTs can be specified as a single value, a range of values, or mixture
#   Ranges are specified in the form "start-stop/nsteps", i.e. [1-2/5] will run with threshold values
#   of [1, 1.25. 1.5, 1.75, 2]
#   Multiple values or ranges are specified in the form "a,b,c",where a, b, and c can each be single 
#   values or ranges, for example [1,2,3,4-10/4] will expand to [1, 2, 3, 4, 6, 8, 10]
#
#####
#
#    Structuring specifications
#
#   A set of these three specifications (category(/ies), metric, threshold(s)) is written within square
#   brackets, with the three parts separated by semicolons, for example (spaces are ignored):
#   
#      [total; n; 2-10/5]
#   
#   This specification would run five iterations. In each iteration, ASVs would be designated as NUMTs 
#   if they fewer than 2, 4, 6, 8 or 10 reads respectively in total across the entire dataset. 
#   
#   Multiple sets of specifications can be compared "additively" in the same run of NUMTdumper by 
#   including them with the + symbol
#   
#      [total; p; 0.001,0.005,0.01] + [library|taxon; p; 0.4,0.6,0.8]
#   
#   This can also be written as
#   
#      [total; p; 0.001,0.005,0.01]
#      + [library|taxon; p; 0.4,0.6,0.8]
#   
#   These lines would run 6 total iterations: the first 3 would designate ASVs as NUMTs if they had
#   less than 0.1%, 0.5% or 1% of the total number of reads respectively, the second 3 would designate
#   ASVs as NUMTs if they were present as less than 40%, 60% or 80% of the total reads per taxon per
#   library in all* of the taxon-library combinations in which they occur.
# 
#   Multiple sets of specifications can also be compared "multiplicitively", where multiple sets are
#   considered simultaneously. For example:
#   
#      [library; p; .001,0.005,0.01] * [total|clade; n; 2,5,10]
#   
#   These lines would run 9 total iterations, comprising all possible combinations of thresholds from
#   each set. In the first iteration, ASVs would be designated as NUMTs if they had less than 1% of the
#   reads in all* libraries in which they were present AND/OR if they had fewer than 2 reads within 
#   their clade across the entire dataset, and so on. 
# 
#   Finally, additive and non-additive sets can all be run together on the same run.
#   
#      [total; n; 2-10/5] + [library|clade; p; 0.15,0.3] 
#      + [library; p; 0.1] * [total|taxon; n; 3,5] * [library|clade+taxon; p; 0.03-0.07/3]
#   
#   These lines would run 5+2+1*2*3 = 13 iterations:
#     > The first 5 iterations would designate as NUMTs any ASVs with fewer than 2, 4, 6, 8 or 10 
#       reads across the entire dataset respectively.
#     > The next two iterations would designate as NUMTs any ASVs with less than 15% or 30% of the
#       total reads for their clade within all* libraries in which they occur.
#     > The final 6 iterations would combine three sets. In all cases, ASVs would be designated as
#       NUMTs if they occur in less than 10% of the total reads within all* libraries in which they
#       occur. Depending on the iteration, ASVs would also be designated as NUMTs if they occur as
#       fewer than 3 or 5 reads within their taxon over the entire dataset (binning by taxon is
#       redundant here) or as less than 3%, 5% or 7% of the total reads for their taxon within their
#       clade within all* libraries in which they occur
# 
#   Remember, blank lines, spaces and line breaks are always ignored. So specifications can be written
#   in any of the following ways:
#   
#      A + B * C
#   
#      A
#      + B
#      * C
#   
#      A +
#   
#      B * C
#   
#   *Note that more strict filtering for library-based specifications can be applied by setting --anyfail,
#   whereby ASVs will be designated as NUMTs if they fail to meet the threshold in ~any~ library in which
#   they occur, as opposed to the default of ~all~ libraries in which they occur. This is currently a 
#   global setting, i.e. it applies to all specifications involving library filtering. It could be applied
#   on a per-specification basis if there is demand.
#
#####
#
# DEFAULT SPECIFICATIONS
#
[library; n; 3-5/3,8-12/2,15-50/7,60-100/5]
+ [library; p; 0.0025,0.005-0.007/14,0.08-0.1/3]
+ [library|taxon; p; 0.001-0.4/15]
* [library|clade; p; 0.001,0.0025,0.005-0.065/12,0.075,0.09,0.1-0.4/7,0.5-0.9/5]
